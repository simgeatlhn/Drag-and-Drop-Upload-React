{"ast":null,"code":"var _jsxFileName = \"/Users/simge/Desktop/React/drag-and-drop-upload/src/components/drop-file-input/DropFileInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport \"./DropFileInput.css\";\nimport { ImageConfig } from \"../../config/ImageConfig\";\nimport uploadImg from \"../../assets/uploadImg.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DropFileInput = props => {\n  _s();\n\n  const wrapperRef = useRef(null);\n  const [fileList, setFileList] = useState([]);\n\n  const onDragEnter = () => wrapperRef.current.classList.add(\"dragover\");\n\n  const onDragLeave = () => wrapperRef.current.classList.remove(\"dragover\");\n\n  const onDrop = () => wrapperRef.current.currentList.remove(\"dragover\");\n\n  const onFileDrop = e => {\n    const newFile = e.target.files[0];\n\n    if (newFile) {\n      const updatedList = [...fileList, newFile];\n      setFileList(updatedList);\n      props.onFileChange(updatedList);\n    }\n  };\n\n  const fileRemove = file => {\n    const updatedList = [...fileList];\n    updatedList.splice(fileList.indexOf(file), 1);\n    setFileList(updatedList);\n    props.onFileChange(updatedList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: wrapperRef,\n      className: \"drop-file-input\",\n      onDragEnter: onDragEnter,\n      onDragLeave: onDragLeave,\n      onDrop: onDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-file-input__label\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"uploadImg\",\n          src: uploadImg,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop your files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        value: \"\",\n        onChange: onFileDrop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), fileList.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"drop-file-preview__title\",\n        children: \"Ready to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), fileList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-file-preview__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"drop-file-preview__item img\",\n          src: ImageConfig[item.type.split(\"/\")[1]] || ImageConfig[\"default\"],\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-file-preview__item__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"drop-file-preview__title\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"drop-file-preview__item__info\",\n            children: item.size\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"drop-file-preview__item__del\",\n            onClick: () => fileRemove(item),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(DropFileInput, \"i0NRILWCu8/6ubv2cxoziOR/evg=\");\n\n_c = DropFileInput;\nDropFileInput.propTypes = {//onFileChange: PropTypes.func\n};\nexport default DropFileInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropFileInput\");","map":{"version":3,"names":["React","useRef","useState","ImageConfig","uploadImg","DropFileInput","props","wrapperRef","fileList","setFileList","onDragEnter","current","classList","add","onDragLeave","remove","onDrop","currentList","onFileDrop","e","newFile","target","files","updatedList","onFileChange","fileRemove","file","splice","indexOf","length","map","item","index","type","split","name","size","propTypes"],"sources":["/Users/simge/Desktop/React/drag-and-drop-upload/src/components/drop-file-input/DropFileInput.jsx"],"sourcesContent":["import React,{useRef,useState} from 'react'\nimport \"./DropFileInput.css\"\nimport {ImageConfig} from \"../../config/ImageConfig\"\nimport uploadImg from \"../../assets/uploadImg.png\"\n\nconst DropFileInput = props => {\n\n  const wrapperRef = useRef(null);\n\n  const[fileList,setFileList] = useState ([]);\n\n  const onDragEnter = () => wrapperRef.current.classList.add(\"dragover\");\n  const onDragLeave = () => wrapperRef.current.classList.remove(\"dragover\");\n  const onDrop = () => wrapperRef.current.currentList.remove(\"dragover\");\n\n  const onFileDrop = (e) => {\n      const newFile = e.target.files[0];\n      if(newFile){\n          const updatedList = [...fileList,newFile];\n          setFileList(updatedList);\n          props.onFileChange(updatedList);\n      }\n  }\n\n  const fileRemove = (file) => {\n        const updatedList = [...fileList];\n        updatedList.splice(fileList.indexOf(file),1);\n        setFileList(updatedList);\n        props.onFileChange(updatedList);\n    \n  }\n\n  return (\n  <>\n    <div \n      ref={wrapperRef}\n      className='drop-file-input'\n      onDragEnter={onDragEnter}\n      onDragLeave={onDragLeave}\n      onDrop={onDrop}\n    >\n        <div className='drop-file-input__label'>\n            <img className='uploadImg' src={uploadImg} alt=\"\" />\n            <p>Drag & Drop your files here</p>\n        </div>\n        <input type=\"file\" value=\"\" onChange={onFileDrop}/>\n    </div>\n    {\n        fileList.length > 0 ? (\n            <div className='drop-file-preview'>\n                <p className='drop-file-preview__title'>\n                    Ready to upload\n                </p>\n                {\n                    fileList.map((item,index) =>(\n                        <div key={index} className='drop-file-preview__item'>\n                            <img className='drop-file-preview__item img' src={ImageConfig[item.type.split(\"/\")[1]] || ImageConfig[\"default\"]} alt=\"\" />\n                            <div className='drop-file-preview__item__info'>\n                                <p className='drop-file-preview__title'>{item.name}</p>\n                                <p className='drop-file-preview__item__info'>{item.size}</p>\n                                <span className='drop-file-preview__item__del' onClick={() =>  fileRemove(item)}>x</span>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        ):null\n    }\n  </>\n  )\n}\n\nDropFileInput.propTypes = {\n    //onFileChange: PropTypes.func\n\n}\n\nexport default DropFileInput"],"mappings":"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"},"metadata":{},"sourceType":"module"}